{"repository_name":"snappy","body":"# Crystal Snappy\n![CI](https://github.com/naqvis/snappy/workflows/CI/badge.svg)\n[![GitHub release](https://img.shields.io/github/release/naqvis/snappy.svg)](https://github.com/naqvis/snappy/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://naqvis.github.io/snappy/)\n\n**Pure Crystal** implementation of [Snappy](https://github.com/google/snappy) compression format. This implementation supports more common case [Snappy Framing Format](https://github.com/google/snappy/blob/master/framing_format.txt).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     snappy:\n       github: naqvis/snappy\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"snappy\"\n```\n\nModule provides both `Compress::Snappy::Reader` and `Compress::Snappy::Writer` for use with streams like `IO` and/or files. It also provides `Compress::Snappy#decode` and `Compress::Snappy#encode` for uncompressing and compressing block formats.\n\n## Example: decompress a snappy file\n#\n```crystal\nrequire \"snappy\"\n\nFile.write(\"file.sz\", Bytes[255, 6, 0, 0, 115, 78, 97, 80, 112, 89, 1, 8, 0, 0, 104, 16, 130, 162, 97, 98, 99, 100])\n\nstring = File.open(\"file.sz\") do |file|\n   Compress::Snappy::Reader.open(file) do |sz|\n     sz.gets_to_end\n   end\nend\nstring # => \"abcd\"\n```\n## Example: compress a file to snappy format\n#\n```crystal\nrequire \"snappy\"\n\nFile.write(\"file.txt\", \"abcd\")\n\nFile.open(\"./file.txt\", \"r\") do |input_file|\n  File.open(\"./file.sz\", \"w\") do |output_file|\n    Compress::Snappy::Writer.open(output_file) do |sz|\n      IO.copy(input_file, sz)\n    end\n  end\nend\n```\n\nRefer to **specs** for usage examples.\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/snappy/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n","program":{"html_id":"snappy/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snappy","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snappy/Compress","path":"Compress.html","kind":"module","full_name":"Compress","name":"Compress","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snappy/Compress/Snappy","path":"Compress/Snappy.html","kind":"module","full_name":"Compress::Snappy","name":"Snappy","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.6\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress","kind":"module","full_name":"Compress","name":"Compress"},"doc":null,"summary":null,"class_methods":[{"id":"decode(src:Slice,dest:Slice)-class-method","html_id":"decode(src:Slice,dest:Slice)-class-method","name":"decode","doc":null,"summary":null,"abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Slice"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"Slice"}],"args_string":"(src : Slice, dest : Slice)","args_html":"(src : Slice, dest : Slice)","location":{"filename":"src/snappy/snappy.cr","line_number":83,"url":null},"def":{"name":"decode","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Slice"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Decompressor.uncompress(src, dest)"}},{"id":"decode(compressed:Slice)-class-method","html_id":"decode(compressed:Slice)-class-method","name":"decode","doc":null,"summary":null,"abstract":false,"args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"args_string":"(compressed : Slice)","args_html":"(compressed : Slice)","location":{"filename":"src/snappy/snappy.cr","line_number":87,"url":null},"def":{"name":"decode","args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Decompressor.uncompress(compressed)"}},{"id":"decode_length(compressed:Slice)-class-method","html_id":"decode_length(compressed:Slice)-class-method","name":"decode_length","doc":null,"summary":null,"abstract":false,"args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"args_string":"(compressed : Slice)","args_html":"(compressed : Slice)","location":{"filename":"src/snappy/snappy.cr","line_number":79,"url":null},"def":{"name":"decode_length","args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Decompressor.uncompressed_length(compressed)"}},{"id":"encode(data:Slice,src_offset,length,dest:Slice,dest_offset=0)-class-method","html_id":"encode(data:Slice,src_offset,length,dest:Slice,dest_offset=0)-class-method","name":"encode","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"src_offset","doc":null,"default_value":"","external_name":"src_offset","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":""},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"Slice"},{"name":"dest_offset","doc":null,"default_value":"0","external_name":"dest_offset","restriction":""}],"args_string":"(data : Slice, src_offset, length, dest : Slice, dest_offset = <span class=\"n\">0</span>)","args_html":"(data : Slice, src_offset, length, dest : Slice, dest_offset = <span class=\"n\">0</span>)","location":{"filename":"src/snappy/snappy.cr","line_number":101,"url":null},"def":{"name":"encode","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"src_offset","doc":null,"default_value":"","external_name":"src_offset","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":""},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"Slice"},{"name":"dest_offset","doc":null,"default_value":"0","external_name":"dest_offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Compressor.compress(data[src_offset..], length, dest, dest_offset)"}},{"id":"encode(data:Slice)-class-method","html_id":"encode(data:Slice)-class-method","name":"encode","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice)","args_html":"(data : Slice)","location":{"filename":"src/snappy/snappy.cr","line_number":95,"url":null},"def":{"name":"encode","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = Bytes.new(encode_length(data.size))\ncompressed_size = Compressor.compress(data, data.size, res, 0)\nres[0...compressed_size]\n"}},{"id":"encode_length(source_length:Int32)-class-method","html_id":"encode_length(source_length:Int32)-class-method","name":"encode_length","doc":null,"summary":null,"abstract":false,"args":[{"name":"source_length","doc":null,"default_value":"","external_name":"source_length","restriction":"Int32"}],"args_string":"(source_length : Int32)","args_html":"(source_length : Int32)","location":{"filename":"src/snappy/snappy.cr","line_number":91,"url":null},"def":{"name":"encode_length","args":[{"name":"source_length","doc":null,"default_value":"","external_name":"source_length","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Compressor.max_compressed_length(source_length)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snappy/Compress/Snappy/ChunkType","path":"Compress/Snappy/ChunkType.html","kind":"enum","full_name":"Compress::Snappy::ChunkType","name":"ChunkType","abstract":false,"superclass":null,"ancestors":[{"html_id":"snappy/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"snappy/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"snappy/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Compressed","name":"Compressed","value":"0","doc":null,"summary":null},{"id":"Uncompressed","name":"Uncompressed","value":"1","doc":null,"summary":null},{"id":"Padding","name":"Padding","value":"254","doc":null,"summary":null},{"id":"StreamIdentifer","name":"StreamIdentifer","value":"255","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":"The chunk types are specified at\nhttps://github.com/google/snappy/blob/master/framing_format.txt","summary":"<p>The chunk types are specified at https://github.com/google/snappy/blob/master/framing_format.txt</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"compressed?-instance-method","html_id":"compressed?-instance-method","name":"compressed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":73,"url":null},"def":{"name":"compressed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Compressed"}},{"id":"padding?-instance-method","html_id":"padding?-instance-method","name":"padding?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":75,"url":null},"def":{"name":"padding?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Padding"}},{"id":"stream_identifer?-instance-method","html_id":"stream_identifer?-instance-method","name":"stream_identifer?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":76,"url":null},"def":{"name":"stream_identifer?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == StreamIdentifer"}},{"id":"uncompressed?-instance-method","html_id":"uncompressed?-instance-method","name":"uncompressed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":74,"url":null},"def":{"name":"uncompressed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Uncompressed"}}],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/Consts","path":"Compress/Snappy/Consts.html","kind":"module","full_name":"Compress::Snappy::Consts","name":"Consts","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"BUF_HEADER_LEN","name":"BUF_HEADER_LEN","value":"(MAGIC_CHUNK.size + CHECK_SUM_SIZE) + CHUNK_HEADER_SIZE","doc":null,"summary":null},{"id":"BUF_LEN","name":"BUF_LEN","value":"BUF_HEADER_LEN + MAX_ENCODED_LEN_OF_MAX_BLOCK_SIZE","doc":null,"summary":null},{"id":"CHECK_SUM_SIZE","name":"CHECK_SUM_SIZE","value":"4","doc":null,"summary":null},{"id":"CHUNK_HEADER_SIZE","name":"CHUNK_HEADER_SIZE","value":"4","doc":null,"summary":null},{"id":"MAGIC_BODY","name":"MAGIC_BODY","value":"\"sNaPpY\"","doc":null,"summary":null},{"id":"MAGIC_CHUNK","name":"MAGIC_CHUNK","value":"\"\\xFF\\u0006\\u0000\\u0000\" + MAGIC_BODY","doc":"header consists of the stream identifier flag, 3 bytes indicating a\nlength of 6, and \"sNaPpY\" in ASCII","summary":"<p>header consists of the stream identifier flag, 3 bytes indicating a length of 6, and \"sNaPpY\" in ASCII</p>"},{"id":"MAX_BLOCK_SIZE","name":"MAX_BLOCK_SIZE","value":"65536","doc":"MAX_BLOCK_SIZE is the maximum size that a chunk of  uncompressed data must be no\nlonger than this size. It is not part of the wire format per se,\nbut some parts of the encoder assume that an offset fits into a UInt16.\n\nAlso, for the framing format (Writer type instead of encode function),\nhttps://github.com/google/snappy/blob/master/framing_format.txt says\nthat \"the uncompressed data in a chunk must be no longer than 65536\nbytes\".","summary":"<p>MAX_BLOCK_SIZE is the maximum size that a chunk of  uncompressed data must be no longer than this size.</p>"},{"id":"MAX_ENCODED_LEN_OF_MAX_BLOCK_SIZE","name":"MAX_ENCODED_LEN_OF_MAX_BLOCK_SIZE","value":"76490","doc":"MAX_ENCODED_LEN_OF_MAX_BLOCK_SIZE equals decode_length(max_block_size), but is\nhard coded to be a const instead of a variable, so that obufLen can also\nbe a const.","summary":"<p>MAX_ENCODED_LEN_OF_MAX_BLOCK_SIZE equals decode_length(max_block_size), but is hard coded to be a const instead of a variable, so that obufLen can also be a const.</p>"},{"id":"MIN_COMPRESSION_RATIO","name":"MIN_COMPRESSION_RATIO","value":"0.85","doc":"Minimum Compression ratio that must be achieved to write the compressed data.\nThis must in (0,1.0]","summary":"<p>Minimum Compression ratio that must be achieved to write the compressed data.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/CRC32C","path":"Compress/Snappy/CRC32C.html","kind":"class","full_name":"Compress::Snappy::CRC32C","name":"CRC32C","abstract":false,"superclass":{"html_id":"snappy/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snappy/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":"A pure Crystal implementation of the CRC32 checksum that uses\nthe CRC32-C Castagnoli polynomial, the same polynomial used by iSCSI\nand implemented on many Intel chipsets supporting SSE4.2.","summary":"<p>A pure Crystal implementation of the CRC32 checksum that uses the CRC32-C Castagnoli polynomial, the same polynomial used by iSCSI and implemented on many Intel chipsets supporting SSE4.2.</p>","class_methods":[{"id":"mask(crc)-class-method","html_id":"mask(crc)-class-method","name":"mask","doc":"returns a masked representation of crc.","summary":"<p>returns a masked representation of crc.</p>","abstract":false,"args":[{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":""}],"args_string":"(crc)","args_html":"(crc)","location":{"filename":"src/snappy/crc32c.cr","line_number":19,"url":null},"def":{"name":"mask","args":[{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((crc >> 15) | (crc << 17)) &+ MASK_DELTA"}},{"id":"masked_crc32c(data:Slice,length:Int32)-class-method","html_id":"masked_crc32c(data:Slice,length:Int32)-class-method","name":"masked_crc32c","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"args_string":"(data : Slice, length : Int32)","args_html":"(data : Slice, length : Int32)","location":{"filename":"src/snappy/crc32c.cr","line_number":12,"url":null},"def":{"name":"masked_crc32c","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"crc32c = new()\ncrc32c.update(data, length)\ncrc32c.masked_value\n"}},{"id":"masked_crc32c(data:Slice)-class-method","html_id":"masked_crc32c(data:Slice)-class-method","name":"masked_crc32c","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice)","args_html":"(data : Slice)","location":{"filename":"src/snappy/crc32c.cr","line_number":8,"url":null},"def":{"name":"masked_crc32c","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"masked_crc32c(data, data.size)"}},{"id":"unmask(masked_crc)-class-method","html_id":"unmask(masked_crc)-class-method","name":"unmask","doc":"return the crc whose masked representation is masked crc","summary":"<p>return the crc whose masked representation is masked crc</p>","abstract":false,"args":[{"name":"masked_crc","doc":null,"default_value":"","external_name":"masked_crc","restriction":""}],"args_string":"(masked_crc)","args_html":"(masked_crc)","location":{"filename":"src/snappy/crc32c.cr","line_number":25,"url":null},"def":{"name":"unmask","args":[{"name":"masked_crc","doc":null,"default_value":"","external_name":"masked_crc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rot = masked_crc32c - MASK_DELTA\n(rot >> 17) | (rot << 15)\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/crc32c.cr","line_number":30,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"masked_value-instance-method","html_id":"masked_value-instance-method","name":"masked_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/crc32c.cr","line_number":35,"url":null},"def":{"name":"masked_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CRC32C.mask(~@crc)"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/crc32c.cr","line_number":39,"url":null},"def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = 0_u32"}},{"id":"update(data:Slice,crc:UInt32)-instance-method","html_id":"update(data:Slice,crc:UInt32)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":"UInt32"}],"args_string":"(data : Slice, crc : UInt32)","args_html":"(data : Slice, crc : UInt32)","location":{"filename":"src/snappy/crc32c.cr","line_number":47,"url":null},"def":{"name":"update","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = ~crc\nupdate(data, data.size)\n"}},{"id":"update(b:Slice,len:Int32)-instance-method","html_id":"update(b:Slice,len:Int32)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Slice"},{"name":"len","doc":null,"default_value":"","external_name":"len","restriction":"Int32"}],"args_string":"(b : Slice, len : Int32)","args_html":"(b : Slice, len : Int32)","location":{"filename":"src/snappy/crc32c.cr","line_number":52,"url":null},"def":{"name":"update","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Slice"},{"name":"len","doc":null,"default_value":"","external_name":"len","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local_crc = @crc\noff = 0\nwhile len > 7\n  c0 = b[off].to_u32 ^ local_crc\n  c1 = b[off + 1].to_u32 ^ (local_crc = (local_crc.to_u >> 8).to_u32)\n  c2 = b[off + 2].to_u32 ^ (local_crc = (local_crc.to_u >> 8).to_u32)\n  c3 = b[off + 3].to_u32 ^ (local_crc = (local_crc.to_u >> 8).to_u32)\n  off = off + 4\n  local_crc = ((T8_7[c0 & 255] ^ T8_6[c1 & 255]) ^ (T8_5[c2 & 255] ^ T8_4[c3 & 255])).to_u32!\n  local_crc = local_crc ^ ((T8_3[b[off] & 255] ^ T8_2[b[off + 1] & 255]) ^ (T8_1[b[off + 2] & 255] ^ T8_0[b[off + 3] & 255]))\n  off = off + 4\n  len = len - 8\nend\nwhile len > 0\n  local_crc = ((local_crc.to_u32 >> 8) ^ T8_0[(local_crc ^ b[off]) & 255]).to_u32!\n  off = off + 1\n  len = len - 1\nend\n@crc = local_crc\n~local_crc\n"}},{"id":"update(b:Slice)-instance-method","html_id":"update(b:Slice)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Slice"}],"args_string":"(b : Slice)","args_html":"(b : Slice)","location":{"filename":"src/snappy/crc32c.cr","line_number":43,"url":null},"def":{"name":"update","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"update(b, 0_u32)"}},{"id":"update(b:UInt32)-instance-method","html_id":"update(b:UInt32)-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"UInt32"}],"args_string":"(b : UInt32)","args_html":"(b : UInt32)","location":{"filename":"src/snappy/crc32c.cr","line_number":80,"url":null},"def":{"name":"update","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = (@crc >> 8) ^ T8_0[(@crc ^ b) & 255]\n~@crc\n"}}],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/ElemType","path":"Compress/Snappy/ElemType.html","kind":"enum","full_name":"Compress::Snappy::ElemType","name":"ElemType","abstract":false,"superclass":null,"ancestors":[{"html_id":"snappy/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"snappy/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"snappy/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Literal","name":"Literal","value":"0","doc":null,"summary":null},{"id":"Copy1","name":"Copy1","value":"1","doc":null,"summary":null},{"id":"Copy2","name":"Copy2","value":"2","doc":null,"summary":null},{"id":"Copy4","name":"Copy4","value":"3","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"copy1?-instance-method","html_id":"copy1?-instance-method","name":"copy1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":34,"url":null},"def":{"name":"copy1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Copy1"}},{"id":"copy2?-instance-method","html_id":"copy2?-instance-method","name":"copy2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":35,"url":null},"def":{"name":"copy2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Copy2"}},{"id":"copy4?-instance-method","html_id":"copy4?-instance-method","name":"copy4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":36,"url":null},"def":{"name":"copy4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Copy4"}},{"id":"literal?-instance-method","html_id":"literal?-instance-method","name":"literal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/snappy.cr","line_number":33,"url":null},"def":{"name":"literal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Literal"}}],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/Reader","path":"Compress/Snappy/Reader.html","kind":"class","full_name":"Compress::Snappy::Reader","name":"Reader","abstract":false,"superclass":{"html_id":"snappy/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"snappy/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"},{"html_id":"snappy/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"snappy/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"snappy/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":null,"summary":null,"class_methods":[{"id":"open(io:IO,verify_checksums=true,sync_close=false,&)-class-method","html_id":"open(io:IO,verify_checksums=true,sync_close=false,&)-class-method","name":"open","doc":"Creates a new reader from the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, verify_checksums = <span class=\"n\">true</span>, sync_close = <span class=\"n\">false</span>, &)","args_html":"(io : IO, verify_checksums = <span class=\"n\">true</span>, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/snappy/reader.cr","line_number":66,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reader = new(io, verify_checksums, sync_close: sync_close)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"}},{"id":"open(filename:String,verify_checksums=true,&)-class-method","html_id":"open(filename:String,verify_checksums=true,&)-class-method","name":"open","doc":"Creates a new reader from the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""}],"args_string":"(filename : String, verify_checksums = <span class=\"n\">true</span>, &)","args_html":"(filename : String, verify_checksums = <span class=\"n\">true</span>, &)","location":{"filename":"src/snappy/reader.cr","line_number":73,"url":null},"def":{"name":"open","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reader = new(filename, verify_checksums)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"}}],"constructors":[{"id":"new(io:IO,verify_checksums=true,sync_close=false)-class-method","html_id":"new(io:IO,verify_checksums=true,sync_close=false)-class-method","name":"new","doc":"Creates a new reader from the given *io*.","summary":"<p>Creates a new reader from the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, verify_checksums = <span class=\"n\">true</span>, sync_close = <span class=\"n\">false</span>)","args_html":"(io : IO, verify_checksums = <span class=\"n\">true</span>, sync_close = <span class=\"n\">false</span>)","location":{"filename":"src/snappy/reader.cr","line_number":36,"url":null},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, verify_checksums, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String,verify_checksums=true)-class-method","html_id":"new(filename:String,verify_checksums=true)-class-method","name":"new","doc":"Creates a new reader from the given *filename*.","summary":"<p>Creates a new reader from the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""}],"args_string":"(filename : String, verify_checksums = <span class=\"n\">true</span>)","args_html":"(filename : String, verify_checksums = <span class=\"n\">true</span>)","location":{"filename":"src/snappy/reader.cr","line_number":60,"url":null},"def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"verify_checksums","doc":null,"default_value":"true","external_name":"verify_checksums","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::File.new(filename), verify_checksums, sync_close: true)"}}],"instance_methods":[{"id":"closed?:Bool-instance-method","html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this reader is closed.","summary":"<p>Returns <code>true</code> if this reader is closed.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/snappy/reader.cr","line_number":33,"url":null},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"id":"reset(io)-instance-method","html_id":"reset(io)-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/snappy/reader.cr","line_number":111,"url":null},"def":{"name":"reset","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"initialize(io, @sync_close)"}},{"id":"sync_close=(sync_close)-instance-method","html_id":"sync_close=(sync_close)-instance-method","name":"sync_close=","doc":"Whether to close the enclosed `IO` when closing this reader.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this reader.</p>","abstract":false,"args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":""}],"args_string":"(sync_close)","args_html":"(sync_close)","location":{"filename":"src/snappy/reader.cr","line_number":30,"url":null},"def":{"name":"sync_close=","args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close = sync_close"}},{"id":"sync_close?:Bool-instance-method","html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"Whether to close the enclosed `IO` when closing this reader.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this reader.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/snappy/reader.cr","line_number":30,"url":null},"def":{"name":"sync_close?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close"}},{"id":"unbuffered_close-instance-method","html_id":"unbuffered_close-instance-method","name":"unbuffered_close","doc":"Closes this reader.","summary":"<p>Closes this reader.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/reader.cr","line_number":99,"url":null},"def":{"name":"unbuffered_close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\nif @sync_close\n  @io.close\nend\n"}},{"id":"unbuffered_flush-instance-method","html_id":"unbuffered_flush-instance-method","name":"unbuffered_flush","doc":"Flushes the wrapped `IO`.","summary":"<p>Flushes the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/reader.cr","line_number":94,"url":null},"def":{"name":"unbuffered_flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't flush Snappy::Reader\"))"}},{"id":"unbuffered_read(slice:Bytes)-instance-method","html_id":"unbuffered_read(slice:Bytes)-instance-method","name":"unbuffered_read","doc":"Reads at most *slice.size* bytes from the wrapped `IO` into *slice*.\nReturns the number of bytes read.","summary":"<p>Reads at most <em>slice.size</em> bytes from the wrapped <code>IO</code> into <em>slice</em>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/snappy/reader.cr","line_number":78,"url":null},"def":{"name":"unbuffered_read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_open\nif slice.empty?\n  return 0\nend\nif ensure_buffer\nelse\n  return 0\nend\nsize = Math.min(slice.size, available())\nslice.copy_from(@buffer[@position..].to_unsafe, size)\n@position = @position + size\nsize\n"}},{"id":"unbuffered_rewind-instance-method","html_id":"unbuffered_rewind-instance-method","name":"unbuffered_rewind","doc":"Rewinds the wrapped `IO`.","summary":"<p>Rewinds the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/reader.cr","line_number":105,"url":null},"def":{"name":"unbuffered_rewind","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_open\n@io.rewind\ninitialize(@io, @sync_close)\n"}},{"id":"unbuffered_write(slice:Bytes):Nil-instance-method","html_id":"unbuffered_write(slice:Bytes):Nil-instance-method","name":"unbuffered_write","doc":"Always raises `IO::Error` because this is a read-only `IO`.","summary":"<p>Always raises <code>IO::Error</code> because this is a read-only <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes) : Nil","args_html":"(slice : Bytes) : Nil","location":{"filename":"src/snappy/reader.cr","line_number":90,"url":null},"def":{"name":"unbuffered_write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"raise(IO::Error.new(\"Can't write to Snappy::Reader\"))"}}],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/SnappyError","path":"Compress/Snappy/SnappyError.html","kind":"class","full_name":"Compress::Snappy::SnappyError","name":"SnappyError","abstract":false,"superclass":{"html_id":"snappy/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"snappy/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"snappy/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"snappy/Compress/Snappy/Writer","path":"Compress/Snappy/Writer.html","kind":"class","full_name":"Compress::Snappy::Writer","name":"Writer","abstract":false,"superclass":{"html_id":"snappy/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"snappy/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"snappy/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snappy/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"snappy","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snappy/Compress/Snappy","kind":"module","full_name":"Compress::Snappy","name":"Snappy"},"doc":null,"summary":null,"class_methods":[{"id":"open(io:IO,sync_close=false,&)-class-method","html_id":"open(io:IO,sync_close=false,&)-class-method","name":"open","doc":"Creates a new writer to the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","args_html":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/snappy/writer.cr","line_number":48,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"writer = new(io, sync_close: sync_close)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"}},{"id":"open(filename:String,&)-class-method","html_id":"open(filename:String,&)-class-method","name":"open","doc":"Creates a new writer to the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String, &)","args_html":"(filename : String, &)","location":{"filename":"src/snappy/writer.cr","line_number":55,"url":null},"def":{"name":"open","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"writer = new(filename)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"}}],"constructors":[{"id":"new(io:IO,compression_ratio=Snappy::Consts::MIN_COMPRESSION_RATIO,sync_close=false)-class-method","html_id":"new(io:IO,compression_ratio=Snappy::Consts::MIN_COMPRESSION_RATIO,sync_close=false)-class-method","name":"new","doc":"Creates a new writer to the given *io*.","summary":"<p>Creates a new writer to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"compression_ratio","doc":null,"default_value":"Snappy::Consts::MIN_COMPRESSION_RATIO","external_name":"compression_ratio","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, compression_ratio = <span class=\"t\">Snappy</span><span class=\"t\">::</span><span class=\"t\">Consts</span><span class=\"t\">::</span><span class=\"t\">MIN_COMPRESSION_RATIO</span>, sync_close = <span class=\"n\">false</span>)","args_html":"(io : IO, compression_ratio = <span class=\"t\">Snappy</span><span class=\"t\">::</span><span class=\"t\">Consts</span><span class=\"t\">::</span><span class=\"t\">MIN_COMPRESSION_RATIO</span>, sync_close = <span class=\"n\">false</span>)","location":{"filename":"src/snappy/writer.cr","line_number":33,"url":null},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"compression_ratio","doc":null,"default_value":"Snappy::Consts::MIN_COMPRESSION_RATIO","external_name":"compression_ratio","restriction":""},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, compression_ratio, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":"Creates a new writer to the given *filename*.","summary":"<p>Creates a new writer to the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","args_html":"(filename : String)","location":{"filename":"src/snappy/writer.cr","line_number":42,"url":null},"def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::File.new(filename, \"w\"), sync_close: true)"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Closes this writer. Must be invoked after all data has been written.","summary":"<p>Closes this writer.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/writer.cr","line_number":109,"url":null},"def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  return\nend\nflush\n@closed = true\nif @sync_close\n  @io.close\nend\n"}},{"id":"closed?:Bool-instance-method","html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this writer is closed.","summary":"<p>Returns <code>true</code> if this writer is closed.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/snappy/writer.cr","line_number":30,"url":null},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"id":"flush-instance-method","html_id":"flush-instance-method","name":"flush","doc":"Compresses and write out any unbuffered data. This does nothing if there is no\ncurrently buffered data.\nSee `IO#flush`.","summary":"<p>Compresses and write out any unbuffered data.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/snappy/writer.cr","line_number":100,"url":null},"def":{"name":"flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_open\nif (@position > 0)\n  write_compressed(@in_buf, @position)\n  @position = 0\nend\n"}},{"id":"read(slice:Bytes)-instance-method","html_id":"read(slice:Bytes)-instance-method","name":"read","doc":"Always raises `IO::Error` because this is a write-only `IO`.","summary":"<p>Always raises <code>IO::Error</code> because this is a write-only <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/snappy/writer.cr","line_number":61,"url":null},"def":{"name":"read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't read from Snappy::Writer\"))"}},{"id":"sync_close=(sync_close)-instance-method","html_id":"sync_close=(sync_close)-instance-method","name":"sync_close=","doc":"Whether to close the enclosed `IO` when closing this writer.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this writer.</p>","abstract":false,"args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":""}],"args_string":"(sync_close)","args_html":"(sync_close)","location":{"filename":"src/snappy/writer.cr","line_number":27,"url":null},"def":{"name":"sync_close=","args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close = sync_close"}},{"id":"sync_close?:Bool-instance-method","html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"Whether to close the enclosed `IO` when closing this writer.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this writer.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/snappy/writer.cr","line_number":27,"url":null},"def":{"name":"sync_close?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close"}},{"id":"write(slice:Bytes):Nil-instance-method","html_id":"write(slice:Bytes):Nil-instance-method","name":"write","doc":"See `IO#write`.","summary":"<p>See <code>IO#write</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes) : Nil","args_html":"(slice : Bytes) : Nil","location":{"filename":"src/snappy/writer.cr","line_number":66,"url":null},"def":{"name":"write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"check_open\nif slice.empty?\n  return\nend\nfree = Snappy::Consts::MAX_BLOCK_SIZE - @position\noffset = 0\nlength = slice.size\nif free >= length\n  copy_to_buffer(slice[offset..], slice.size)\n  return\nend\nif @position <= 0\nelse\n  copy_to_buffer(slice[offset..], free)\n  flush\n  offset = offset + free\n  length = length - free\nend\nwhile length >= Snappy::Consts::MAX_BLOCK_SIZE\n  write_compressed(slice[offset..], Snappy::Consts::MAX_BLOCK_SIZE)\n  offset = offset + Snappy::Consts::MAX_BLOCK_SIZE\n  length = length - Snappy::Consts::MAX_BLOCK_SIZE\nend\ncopy_to_buffer(slice[offset..], length)\n"}}],"macros":[],"types":[]}]}]}]}}